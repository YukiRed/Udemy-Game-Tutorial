name: Unity CI - Test + Build + Release

on:
  push: # Trigger builds/tests on any push
  workflow_dispatch: # Allow manual run from GitHub UI

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: üß™ Run Unity Tests
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:ubuntu-6000.0.45f1-base-3.1.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Test-Library-${{ github.run_id }}
          restore-keys: |
            Test-Library-

      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        with:
          unityVersion: 6000.0.45f1
          projectPath: .
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: artifacts

  build-webgl:
    name: üåê Build WebGL
    needs: test
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:ubuntu-6000.0.45f1-webgl-3.1.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: WebGL-Library-${{ github.run_id }}
          restore-keys: |
            WebGL-Library-

      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: WebGL
          unityVersion: 6000.0.45f1

      - name: Zip WebGL Build
        run: |
          cd build/WebGL
          zip -r ../../WebGL.zip .

      - name: Upload WebGL to GitHub Release (on tags only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: WebGL.zip

  build-windows:
    name: ü™ü Build Windows
    needs: test
    runs-on: ubuntu-latest
    container:
      image: unityci/editor:ubuntu-6000.0.45f1-windows-mono-3.1.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Windows-Library-${{ github.run_id }}
          restore-keys: |
            Windows-Library-

      - name: Build Windows
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 6000.0.45f1

      - name: Zip Windows Build
        run: |
          cd build/StandaloneWindows64
          zip -r ../../Windows.zip .

      - name: Upload Windows to GitHub Release (on tags only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: Windows.zip
