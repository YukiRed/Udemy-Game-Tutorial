name: Unity CI

on:
  push:
    branches: [ main ]
  pull_request:

  release:
    types: [published]  # Trigger build job when a release is published

jobs:
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-Test-${{ github.run_id }}
          restore-keys: |
            Library-Test-

      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 6000.0.42f1

  build:
    name: Build and Attach to Release
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform: [StandaloneWindows64, WebGL]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ github.run_id }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-

      - name: Build Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: 6000.0.42f1

      - name: Zip Build
        run: |
          cd build/${{ matrix.targetPlatform }}
          zip -r ../../${{ matrix.targetPlatform }}.zip .

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: ${{ matrix.targetPlatform }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
